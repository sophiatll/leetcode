import java.util.*;

class Solution {
  void merge(int[] a, int start, int mid, int end){
    int len = end - start +1;
    int[] b = new int[len];
    int i=start; 
    int j=mid+1;
    int k = 0;
    while(i<=mid && j<=end) {
      if(a[i]<=a[j]) b[k++] = a[i++];
      else b[k++] = a[j++];
    }
    while(j<=end) b[k++] = a[j++];
    while(i<=mid) b[k++] = a[i++];
    
    for(i=start,k=0; k<len; i++, k++) {
      a[i] = b[k];
    }
  }
  
    
  void mergeSortHelper(int[] a, int start, int end) {
    if(start >= end) return;
    int mid = start + (end-start)/2;
    mergeSortHelper(a, start, mid);
    mergeSortHelper(a, mid+1, end);
    merge(a, start, mid, end);
  }
  
  
  void mergeSort(int a[]) {
    int start = 0;
    int end = a.length -1;
    mergeSortHelper(a, start, end);
  }
  
  
  public static void main(String[] args) {
    int[] a1 = new int[]{7,6,5,4,3,2,1};
    new Solution().mergeSort(a1);
    System.out.println(Arrays.toString(a1));
  }
}

